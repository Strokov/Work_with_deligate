using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Lesson6
{

    // Задание1.
    //Изменить программу вывода функции так, чтобы можно было передавать функции типа double(double,double). 
    //    Продемонстировать работу на функции с параметром a*x^2... 


  
    class Program
    {
        
        // Создаем делегат как обертку для вставки наших функций в функцию PRINT (она ниже)... 
        // теперь где в Print мы подставляем разные функции - там в методе пишем этот делегат!

        public delegate double Func(double x);

        
        // Создадим 3 функции свои собственные для примера:

        public static double Func1(double x)
        {
            return 10 * x;
        }
        
        public static double Func2(double x)
        {
            return 10 * (x * x);
        }

        public static double Func3(double x)
        {
            return 10 * (x * x * x);
        }


        //  Засунем в метод функцию. При этом в методе будет заданы начало, конец и шаг независимой переменной
        // И вывод красивый на консоль:))
        // А самое главное - где будет стоять любая функция - там в методе пишем делегат!
        // и Тогда уже при использовании метода получим возможность применить его для люобой функции, он будет знать, 
        // что вместо делегата мы можем засунуть любую функцию в это место:))
        public static void Print (Func F, double x, double end, double step)
        {
            Console.WriteLine("-------------- Вывод значений ---------------------------------------");
            while (x <= end)
            {
                Console.WriteLine("При значении x = " + x + ",  функция примет значение:  " + F(x));
                x=x+step;
            }
            Console.WriteLine("----------------------------- конец ----------------------------------");
            Console.ReadKey();
        }





        // Задание 2. 
        // Модифицировать программу нахождения минимума функции так, чтобы можно было передавать функцию 
        //   в виде делегата. Сделать меню с различными функциями и представьте пользователю выбор 
        // для какой функциии на каком отрезке находить минимум.         
        // Функция с делегатом, возвращающая минимальное значение любой функции в заданном диапазоне от start до end!

        public static void Min (Func F, double start, double end)
        {
            double min = F(start);
            for (double i = start; i<=end; i++)
            {
                if (min > F(i)) min = F(i);
            }
            Console.WriteLine("Минимальное значение функции при Х от " + start + " до " + end + " равно: "+ min);
            Console.ReadKey();
        }



        static void Main(string[] args)
        {


            //  Задание 1 и 2. РЕАЛИЗАЦИЯ МЕТОДов С ДЕЛЕГАТОМ: 

            Console.WriteLine("\n ФУНКЦИЯ 10*Х:   ");
            Print(Func1, 1, 10, 1); // Вывод метода с делегатом на  консоль 
            Min(Func1, 1, 100); // Вывод метода нахождения минимума функции с делегатом на консоль

            Console.WriteLine("\n ФУНКЦИЯ 10*Х^2:   ");
            Print(Func2, -10, 10, 1); // Вывод метода с делегатом на консоль
            Min(Func2, -10, 10);   // Вывод метода нахождения минимума функции с делегатом на консоль

            Console.WriteLine("\n  ФУНКЦИЯ 10*Х^3: " );
            Print(Func3, 1, 10, 1);// Вывод метода с делегатом на консоль

            Console.WriteLine("\n  ФУНКЦИЯ sin:  ");
            Print(Math.Sin, 1, 10, 1);// Вывод метода с делегатом на консоль
            Min(Math.Sin, 1, 10);  // Вывод метода нахождения минимума функции с делегатом на консоль

            Console.WriteLine("\n  ФУНКЦИЯ lg(x):  ");
            Print(Math.Log10, 1, 10, 1);// Вывод метода с делегатом на консоль

            
   




        }
    }
}
